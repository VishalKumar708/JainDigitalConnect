"""
Django settings for auth_api project.

Generated by 'django-admin startproject' using Django 4.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-a3z&h2hki16x=vk*87!8-xba!tg!50szf=!npl0=)kpvg(_4)w'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['192.168.100.3', '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'accounts',
    # "debug_toolbar",
    # 'rest_framework_simplejwt',
    'rest_framework',
    # 'rest_framework.authtoken'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'accounts.middleware.ValidateURLAndJSONMiddleware'

    # "debug_toolbar.middleware.DebugToolbarMiddleware",

]

# for debug the program
# INTERNAL_IPS = [
#     "127.0.0.1",
# ]
ROOT_URLCONF = 'auth_api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'auth_api.wsgi.application'
# for creating custom user
# AUTH_USER_MODEL = 'accounts.CustomUser'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# for otp
SID = 'AC74f8aa592b9f4bc82af4402dfd2ce24a'
# AUTH_TOKEN = '580a9c14bfb1bc99add5ba9c820d858c'
AUTH_TOKEN = '9bc540aefab30e0bff9d9780623866b9'
SENDER_NUMBER = '+15187540316'
OTP_EXPIRY_DURATION = 600  # in seconds

import os
LOG_DIR = os.path.join(BASE_DIR, 'log')

# Ensure the log directory exists, and create it if it doesn't
if not os.path.exists(LOG_DIR):
    os.makedirs(LOG_DIR)

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {
            "format": "%(levelname)s %(asctime)s  %(lineno)s %(message)s",
            # "style": "{",
        },
        "plain": {
            "format": "%(levelname)s: %(asctime)s | %(module)s.py| func: %(funcName)s| line number: %(lineno)s| %(message)s",
            # "style": "{",
        },
    },
    "filters": {
        # "special": {
        #     "()": "project.logging.SpecialFilter",
        #     "foo": "bar",
        # },
        "require_debug_true": {
            "()": "django.utils.log.RequireDebugTrue",
        },
    },
    "handlers": {
        "console": {
            "level": "INFO",
            "filters": ["require_debug_true"],
            "class": "logging.StreamHandler",
            "formatter": "verbose",
        },
        'info': {
            "level": "INFO",
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(LOG_DIR, "info.log"),
            'maxBytes': 300 * 1024 * 1024,
            'backupCount': 10,
            "formatter": "verbose",
            "encoding": 'utf-8'
        },
        'auth_view_log': {
            "level": "INFO",
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(LOG_DIR, "auth_views.log"),
            'maxBytes': 300 * 1024 * 1024,
            'backupCount': 10,
            "formatter": "plain",
            "encoding": 'utf-8'
        },
        'user_view_log': {
            "level": "INFO",
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(LOG_DIR, "user_views.log"),
            'maxBytes': 300 * 1024 * 1024,
            'backupCount': 10,
            "formatter": "plain",
            "encoding": 'utf-8'
        },
        'middleware_log': {
            "level": "INFO",
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(LOG_DIR, "middleware.log"),
            'maxBytes': 300 * 1024 * 1024,
            'backupCount': 10,
            "formatter": "plain",
            "encoding": 'utf-8'
        }
    },
    "loggers": {
        "django": {
            "handlers": ["info", "console"],
            "propagate": True,
            "level": "INFO"
        },
        "auth_log": {
            "handlers": ["auth_view_log"],
            "level": "INFO",
            "propagate": True,
        },
        "user_log": {
            "handlers": ["user_view_log"],
            "level": "INFO",
            "propagate": True,
        },
        "middleware_log": {
            "handlers": ["middleware_log"],
            "level": "INFO",
            "propagate": True,
        },
    },
}
